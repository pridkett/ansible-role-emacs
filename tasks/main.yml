---
# tasks file for emacs
#
# see: https://macowners.club/posts/using-xwidgets-on-macos/
# see: https://github.com/d12frosted/homebrew-emacs-plus#emacs-29-and-emacs-30
- name: Install emacs-plus
  block:
    - name: Tap d12frosted/emacs-plus (homebrew)
      homebrew_tap:
        name: d12frosted/emacs-plus
        state: present

    - name: Install emacs-plus@28 (homebrew)
      community.general.homebrew:
        name: emacs-plus@28
        state: present
        install_options: with-xwidgets,with-imagemagick,with-native-comp

    - name: Get installed location (homebrew)
      shell:
        cmd: brew list emacs-plus@28 | grep Emacs.app | sed -e 's/Emacs.app.*$/Emacs.app/g' | head -n 1
      register: emacs_homebrew_installed_path

    - name: Install Emacs.app (homebrew)
      copy:
        src: "{{ emacs_homebrew_installed_path.stdout }}"
        dest: /Applications
        mode: preserve
        force: no

  tags: install
  when: ansible_pkg_mgr == 'homebrew'

- name: Install Emacs (apt)
  apt:
    name: ["emacs"]
    state: present
    update_cache: true
  become: true

  tags: install
  when: ansible_pkg_mgr == 'apt'

# for Emacs 24-bit color support: https://stackoverflow.com/a/50577683/57626
- name: Check for 24-bit termcap definition
  shell:
    cmd: if [ -d ~/.terminfo ]; then find ~/.terminfo -type f -name xterm-24bits; fi
  register: find_xterm24bits
  ignore_errors: true
  when: ansible_os_family|lower == 'debian' or ansible_os_family|lower == 'darwin'
  tags: configure

- name: Create temporary file for 24-bit emacs support
  tempfile:
    state: file
    suffix: temp
  register: tempfile_1
  when: find_xterm24bits is defined and find_xterm24bits.stdout == ""
  tags: configure

- name: Set up Emacs for 24-bit support
  copy:
    src: emacs-24-bit
    dest: "{{ tempfile_1.path }}"
  when: find_xterm24bits is defined and find_xterm24bits.stdout == ""
  tags: configure

- name: Compile Emacs 24-bit terminal
  shell: "tic -x -o ~/.terminfo {{ tempfile_1.path }}"
  when: find_xterm24bits is defined and find_xterm24bits.stdout == ""
  tags: configure

- name: Install 24-bit color zsh alias
  template:
    src: emacs.zsh.j2
    dest: "{{ ansible_env.HOME }}/.zshrc.d/emacs.zsh"
  when: emacs.install_zsh is defined and emacs.install_zsh == True
  tags: configure

- name: Install 24-bit color bash alias
  template:
    src: emacs.sh.j2
    dest: "{{ ansible_env.HOME }}/.bashrc.d/emacs.sh"
  when: emacs.install_bash is defined and emacs.install_bash == True
  tags: configure

- name: Install 24-bit color fish alias
  template:
    src: emacs.fish.j2
    dest: "{{ ansible_env.HOME }}/.config/fish/fish.d/emacs.fish"
  when: emacs.install_fish is defined and emacs.install_fish == True
  tags: configure

- name: Create .emacs.d directory
  file:
    path: "{{ ansible_env.HOME }}/.emacs.d"
    state: directory
  tags: configure

- name: "Write emacs configuration to {{ emacs_config }}"
  template:
    src: emacs.j2
    dest: "{{ emacs_config }}"
    backup: yes
  when: emacs_create_initel == True
  tags: configure

- name: "Download configuration files from remote urls"
  get_url:
    url: "{{ item.url }}"
    dest: "{{ ansible_env.HOME }}/.emacs.d/{{ item.dest }}"
    url_username: "{{ item.url_username | default(omit) }}"
    url_password: "{{ item.url_password | default('') }}"
    force_basic_auth: "{{ item.force_basic_auth | default('no') }}"
  loop: "{{ emacs.copy_files }}"
  when: emacs.copy_files is defined
  tags: configure
